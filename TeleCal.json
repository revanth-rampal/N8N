{
  "name": "TeleCal",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -448,
        16
      ],
      "id": "cce48516-523c-4312-8160-437f516dba63",
      "name": "Telegram Trigger",
      "webhookId": "a0599a12-85f2-4e79-8574-1005ecbe9f0f",
      "credentials": {
        "telegramApi": {
          "id": "KbhXyO4cqCl6k99i",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const text = $input.item.json.message.text;\n\nconst regex = /\\/event (.*) with (.*) on (.*)/i;\nconst match = text.match(regex);\n\nif (!match) {\n  return [];\n}\n\nconst rawDateString = match[3].trim();\n\n// Remove the word \"at\" and add your timezone offset\nconst cleanedDateString = rawDateString.replace(' at ', ' ');\nconst userTimezoneOffset = \"+05:30\";\nconst dateWithTimezone = cleanedDateString + \" \" + userTimezoneOffset;\n\nconst isoFormattedDate = new Date(dateWithTimezone).toISOString();\n\nconst eventDetails = {\n  title: match[1].trim(),\n  attendeeEmail: match[2].trim(),\n  startTime: isoFormattedDate\n};\n\nreturn [{\n  json: eventDetails\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -112,
        -32
      ],
      "id": "7db2d722-37ba-495d-ae7e-bc8e1d9a151c",
      "name": "Code"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "revanthrampal@gmail.com",
          "mode": "list",
          "cachedResultName": "revanthrampal@gmail.com"
        },
        "start": "={{ $('Code').item.json.startTime }}",
        "end": "={{ $('Code').item.json.startTime }}",
        "additionalFields": {
          "attendees": [
            "={{ $('Code').item.json.attendeeEmail }}"
          ],
          "sendUpdates": "all",
          "summary": "={{ $('Code').item.json.title }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        112,
        -32
      ],
      "id": "bcf297fb-1d75-4e82-894b-7dc573e3321d",
      "name": "Create an event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "wR7YPlc4hHjSKXRn",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=âœ… Event Created!\n\n**Title:** {{ $('Create an event').item.json.summary }}\n**Link:** {{ $('Create an event').item.json.htmlLink }}\n\nAn invitation has been sent.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        512,
        -32
      ],
      "id": "18fe7814-aaf8-46fd-bd12-b5f784a6fb3b",
      "name": "Send a text message",
      "webhookId": "ac451f93-7820-4648-a96d-5851b07ada99",
      "credentials": {
        "telegramApi": {
          "id": "KbhXyO4cqCl6k99i",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create an event": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "de49d3b0-787b-4175-860f-ca1d4a07bfa8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "829c84efd6a1acde35cad3cfe1982ace0fb406d65cac2d56031c74d97bd2f499"
  },
  "id": "pcDFX7mv9PMsdxmJ",
  "tags": []
}